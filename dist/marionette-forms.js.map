{"version":3,"sources":["../src/lib/models/FormModel.js","../src/lib/views/FormView.js"],"names":[],"mappings":"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","file":"marionette-forms.js","sourcesContent":["var FormModel = Backbone.Model.extend({\n    // validar cada tipo de datos lanzando un evento\n\n    validationTypes: ['email', 'text', 'number', 'url', 'regexp'],\n\n    validate: function(attributes, options) {\n        console.log(options.type);\n    }\n\n});\n\nBackbone.Marionette.FormModel = FormModel;","var FormView = Backbone.Marionette.ItemView.extend({\n\n    defaultSchema: {\n        ui: null,\n        event: null,\n        required: false,\n        type: 'text',\n        message: 'invalid field'\n    },\n\n    bindSchema: function() {\n\n        if (_.isEmpty(this.schema)) {\n            return;\n        }\n\n        if (_.isUndefined(this.ui)) {\n            this.ui = {};\n        }\n\n        if (_.isUndefined(this.model)) {\n            this.model = new Backbone.Marionette.FormModel();\n        }\n\n        this.undelegateEvents();\n\n        _.each(this.schema, _.bind(function(_item, key) {\n\n            var item = _.extend(_.clone(this.defaultSchema), _item);\n            item.key = key;\n\n            if (_.isNull(item.ui) || _.isNull(item.event)) {\n                return;\n            }\n\n            this.ui[key] = this.$el.find(item.ui);\n            this.delegate(item.event, item.ui, _.bind(this.saveItem, this), item);\n            if (item.required) {\n                this.listenTo(this.model, 'validate:'+key, this.errorItem);\n            }\n\n        }, this));\n    },\n\n    delegate: function(eventName, selector, listener, options) {\n        this.$el.on(eventName + '.delegateEvents' + this.cid, selector, options, listener);\n    },\n\n    saveItem: function(event) {\n        if (!event.data || _.isEmpty(event.data)) {\n            return;\n        }\n        this.model.set(event.data.key, this.ui[event.data.key].val(), {validate: event.data.required, type: event.data.type});\n    },\n\n    errorItem: function(key, message) {\n        console.log('validating response.....', message);\n    }\n\n});\n\nBackbone.Marionette.FormView = FormView;"]}