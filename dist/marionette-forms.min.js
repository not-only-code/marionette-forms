!function(){"use strict";Backbone.Marionette.FormModel=Backbone.Model.extend({validations:{email:/^[\w\-]{1,}([\w\-\+.]{1,1}[\w\-]{1,}){0,}[@][\w\-]{1,}([.]([\w\-]{1,})){1,3}$/,url:/^(http|https):\/\/(([A-Z0-9][A-Z0-9_\-]*)(\.[A-Z0-9][A-Z0-9_\-]*)+)(:(\d+))?\/?/i,number:/^[0-9]*\.?[0-9]*?$/,text:function(a,b){var c=b.options&&b.options.length?b.options.length:3;return _.isString(a)&&a.length>=c},select:function(a,b){var c=b.options&&b.options.default?b.options.default:"0";return _.isString(a)&&a!==c},password:function(a,b){return _.has(b.options,"repeat")?(_.isString(b.options.repeat)&&(b.options.repeat=$(b.options.repeat)),b.options.repeat instanceof jQuery?b.options.repeat.val()===a:this.validateText(a,b)):this.validateText(a,b)},regexp:function(a,b){if(!_.has(b.options,"regexp"))throw new Error("Regexp validation must have a regexp option to validate it");if(!_.isRegExp(b.options.regexp))throw new Error("options.regexp must be a regular expression");return b.options.regexp.test(a)},radio:function(a){return console.log(a),!_.isUndefined(a)},checkbox:function(a){return a},custom:function(a,b){if(!_.isFunction(b.options.regexp))throw new Error("options must be a function");return b.options(a)}},validate:function(a,b){if(_.has(b,"key")&&_.has(b,"type")&&_.contains(_.keys(this.validations),b.type)){var c;if(c=_.isFunction(this.validations[b.type])?this.validations[b.type](a[b.key],b):this.validations[b.type].test(a[b.key]),!c)return this.trigger("invalid:"+b.key,b),b.message}}}),Backbone.Marionette.FormView=Backbone.Marionette.View.extend({defaultSchema:{ui:null,event:null,validate:!0,type:"text",message:"invalid field"},schema:{},ui:{},constructor:function(a){if((_.isUndefined(a)||_.isUndefined(a.model))&&(this.model=new Backbone.Marionette.FormModel),!_.isUndefined(a)&&_.has(a,"schema")&&_.extend(this.schema,a.schema),Backbone.Marionette.View.apply(this,arguments),_.isEmpty(this.schema))throw new Error("FormView instance has empty schema")},delegateFormEvents:function(){this.$el&&(_.each(this.schema,_.bind(function(a,b){var c=_.extend(_.clone(this.defaultSchema),a);c.key=b,_.isNull(c.ui)||_.isNull(c.event)||(this.ui[b]=this.$el.find(c.ui),this.delegate(c.event,c.ui,_.bind(this.saveItem,this),c),c.validate&&(this.ui[b].addClass("required"),this.listenTo(this.model,"invalid:"+b,this.errorItem)))},this)),this.listenTo(this.model,"invalid",this.invalid))},delegate:function(a,b,c,d){var e=d||{};this.$el.on(a+".formEvents"+this.cid,b,e,c)},undelegateFormEvents:function(){return this.$el&&this.$el.off(".formEvents"+this.cid),this},delegateEvents:function(a){return this._delegateDOMEvents(a),this.delegateFormEvents(),this.bindEntityEvents(this.model,this.getOption("modelEvents")),this.bindEntityEvents(this.collection,this.getOption("collectionEvents")),this},undelegateEvents:function(){var a=Array.prototype.slice.call(arguments);return Backbone.View.prototype.undelegateEvents.apply(this,a),this.undelegateFormEvents(),this.unbindEntityEvents(this.model,this.getOption("modelEvents")),this.unbindEntityEvents(this.collection,this.getOption("collectionEvents")),this},saveItem:function(a){var b,c=a.data||null;if(!_.isNull(c)){switch(this.valid(),this.ui[c.key].removeClass("error"),c.type){case"checkbox":b=this.ui[c.key].is(":checked");break;case"radio":b=this.ui[c.key].filter(":checked").val();break;default:b=this.ui[c.key].val()}this.model.set(c.key,b,c)}},errorItem:function(a){a&&!_.isEmpty(a)&&this.ui[a.key]&&this.ui[a.key].addClass("error")},invalid:function(){},valid:function(){}})}(window||global||this);